

    @model PagedList.IPagedList< Codefirst_Web_Application.Models.Student>

    @using PagedList.Mvc;

    @{
        ViewBag.Title = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    @using (Html.BeginForm("index", "Student", FormMethod.Get))
    {
        <p>
            Find by Name @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="search" />
        </p>
    }
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Last Name", "Index", new
                {
                    sortOrder = ViewBag.NameSortParm,
                    currentFilter = ViewBag.CurrentFilter
           });
            </th>
            <th>First Name</th>
            <th>
                @Html.ActionLink("Enrollment Date", "Index", new
                {
                    sortOrder = ViewBag.DateSortParm,
                    currentFilter = ViewBag.CurrentFilter
                });
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FistMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }

    </table>

    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("index", new { page, sortOrder = ViewBag.CurrentFulter = ViewBag.CurrentFilter = ViewBag.CurrentFilter }))
